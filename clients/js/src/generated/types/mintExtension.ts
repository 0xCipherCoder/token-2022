/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import {
  Codec,
  Decoder,
  Encoder,
  GetDiscriminatedUnionVariant,
  GetDiscriminatedUnionVariantContent,
  ReadonlyUint8Array,
  combineCodec,
  getBytesDecoder,
  getBytesEncoder,
  getDiscriminatedUnionDecoder,
  getDiscriminatedUnionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU16Decoder,
  getU16Encoder,
  getUnitDecoder,
  getUnitEncoder,
} from '@solana/web3.js';

export type MintExtension =
  | { __kind: 'Uninitialized' }
  | { __kind: 'TransferFeeConfig'; data: ReadonlyUint8Array }
  | { __kind: 'TransferFeeAmount'; data: ReadonlyUint8Array }
  | { __kind: 'MintCloseAuthority'; data: ReadonlyUint8Array }
  | { __kind: 'ConfidentialTransferMint'; data: ReadonlyUint8Array }
  | { __kind: 'ConfidentialTransferAccount'; data: ReadonlyUint8Array }
  | { __kind: 'DefaultAccountState'; data: ReadonlyUint8Array }
  | { __kind: 'ImmutableOwner'; data: ReadonlyUint8Array }
  | { __kind: 'MemoTransfer'; data: ReadonlyUint8Array }
  | { __kind: 'NonTransferable'; data: ReadonlyUint8Array }
  | { __kind: 'InterestBearingConfig'; data: ReadonlyUint8Array }
  | { __kind: 'CpiGuard'; data: ReadonlyUint8Array }
  | { __kind: 'PermanentDelegate'; data: ReadonlyUint8Array }
  | { __kind: 'NonTransferableAccount'; data: ReadonlyUint8Array }
  | { __kind: 'TransferHook'; data: ReadonlyUint8Array }
  | { __kind: 'TransferHookAccount'; data: ReadonlyUint8Array }
  | { __kind: 'ConfidentialTransferFee'; data: ReadonlyUint8Array }
  | { __kind: 'ConfidentialTransferFeeAmount'; data: ReadonlyUint8Array }
  | { __kind: 'MetadataPointer'; data: ReadonlyUint8Array }
  | { __kind: 'TokenMetadata'; data: ReadonlyUint8Array }
  | { __kind: 'GroupPointer'; data: ReadonlyUint8Array }
  | { __kind: 'TokenGroup'; data: ReadonlyUint8Array }
  | { __kind: 'GroupMemberPointer'; data: ReadonlyUint8Array }
  | { __kind: 'TokenGroupMember'; data: ReadonlyUint8Array };

export type MintExtensionArgs = MintExtension;

export function getMintExtensionEncoder(): Encoder<MintExtensionArgs> {
  return getDiscriminatedUnionEncoder(
    [
      ['Uninitialized', getUnitEncoder()],
      ['TransferFeeConfig', getStructEncoder([['data', getBytesEncoder()]])],
      ['TransferFeeAmount', getStructEncoder([['data', getBytesEncoder()]])],
      ['MintCloseAuthority', getStructEncoder([['data', getBytesEncoder()]])],
      [
        'ConfidentialTransferMint',
        getStructEncoder([['data', getBytesEncoder()]]),
      ],
      [
        'ConfidentialTransferAccount',
        getStructEncoder([['data', getBytesEncoder()]]),
      ],
      ['DefaultAccountState', getStructEncoder([['data', getBytesEncoder()]])],
      ['ImmutableOwner', getStructEncoder([['data', getBytesEncoder()]])],
      ['MemoTransfer', getStructEncoder([['data', getBytesEncoder()]])],
      ['NonTransferable', getStructEncoder([['data', getBytesEncoder()]])],
      [
        'InterestBearingConfig',
        getStructEncoder([['data', getBytesEncoder()]]),
      ],
      ['CpiGuard', getStructEncoder([['data', getBytesEncoder()]])],
      ['PermanentDelegate', getStructEncoder([['data', getBytesEncoder()]])],
      [
        'NonTransferableAccount',
        getStructEncoder([['data', getBytesEncoder()]]),
      ],
      ['TransferHook', getStructEncoder([['data', getBytesEncoder()]])],
      ['TransferHookAccount', getStructEncoder([['data', getBytesEncoder()]])],
      [
        'ConfidentialTransferFee',
        getStructEncoder([['data', getBytesEncoder()]]),
      ],
      [
        'ConfidentialTransferFeeAmount',
        getStructEncoder([['data', getBytesEncoder()]]),
      ],
      ['MetadataPointer', getStructEncoder([['data', getBytesEncoder()]])],
      ['TokenMetadata', getStructEncoder([['data', getBytesEncoder()]])],
      ['GroupPointer', getStructEncoder([['data', getBytesEncoder()]])],
      ['TokenGroup', getStructEncoder([['data', getBytesEncoder()]])],
      ['GroupMemberPointer', getStructEncoder([['data', getBytesEncoder()]])],
      ['TokenGroupMember', getStructEncoder([['data', getBytesEncoder()]])],
    ],
    { size: getU16Encoder() }
  );
}

export function getMintExtensionDecoder(): Decoder<MintExtension> {
  return getDiscriminatedUnionDecoder(
    [
      ['Uninitialized', getUnitDecoder()],
      ['TransferFeeConfig', getStructDecoder([['data', getBytesDecoder()]])],
      ['TransferFeeAmount', getStructDecoder([['data', getBytesDecoder()]])],
      ['MintCloseAuthority', getStructDecoder([['data', getBytesDecoder()]])],
      [
        'ConfidentialTransferMint',
        getStructDecoder([['data', getBytesDecoder()]]),
      ],
      [
        'ConfidentialTransferAccount',
        getStructDecoder([['data', getBytesDecoder()]]),
      ],
      ['DefaultAccountState', getStructDecoder([['data', getBytesDecoder()]])],
      ['ImmutableOwner', getStructDecoder([['data', getBytesDecoder()]])],
      ['MemoTransfer', getStructDecoder([['data', getBytesDecoder()]])],
      ['NonTransferable', getStructDecoder([['data', getBytesDecoder()]])],
      [
        'InterestBearingConfig',
        getStructDecoder([['data', getBytesDecoder()]]),
      ],
      ['CpiGuard', getStructDecoder([['data', getBytesDecoder()]])],
      ['PermanentDelegate', getStructDecoder([['data', getBytesDecoder()]])],
      [
        'NonTransferableAccount',
        getStructDecoder([['data', getBytesDecoder()]]),
      ],
      ['TransferHook', getStructDecoder([['data', getBytesDecoder()]])],
      ['TransferHookAccount', getStructDecoder([['data', getBytesDecoder()]])],
      [
        'ConfidentialTransferFee',
        getStructDecoder([['data', getBytesDecoder()]]),
      ],
      [
        'ConfidentialTransferFeeAmount',
        getStructDecoder([['data', getBytesDecoder()]]),
      ],
      ['MetadataPointer', getStructDecoder([['data', getBytesDecoder()]])],
      ['TokenMetadata', getStructDecoder([['data', getBytesDecoder()]])],
      ['GroupPointer', getStructDecoder([['data', getBytesDecoder()]])],
      ['TokenGroup', getStructDecoder([['data', getBytesDecoder()]])],
      ['GroupMemberPointer', getStructDecoder([['data', getBytesDecoder()]])],
      ['TokenGroupMember', getStructDecoder([['data', getBytesDecoder()]])],
    ],
    { size: getU16Decoder() }
  );
}

export function getMintExtensionCodec(): Codec<
  MintExtensionArgs,
  MintExtension
> {
  return combineCodec(getMintExtensionEncoder(), getMintExtensionDecoder());
}

// Data Enum Helpers.
export function mintExtension(
  kind: 'Uninitialized'
): GetDiscriminatedUnionVariant<MintExtensionArgs, '__kind', 'Uninitialized'>;
export function mintExtension(
  kind: 'TransferFeeConfig',
  data: GetDiscriminatedUnionVariantContent<
    MintExtensionArgs,
    '__kind',
    'TransferFeeConfig'
  >
): GetDiscriminatedUnionVariant<
  MintExtensionArgs,
  '__kind',
  'TransferFeeConfig'
>;
export function mintExtension(
  kind: 'TransferFeeAmount',
  data: GetDiscriminatedUnionVariantContent<
    MintExtensionArgs,
    '__kind',
    'TransferFeeAmount'
  >
): GetDiscriminatedUnionVariant<
  MintExtensionArgs,
  '__kind',
  'TransferFeeAmount'
>;
export function mintExtension(
  kind: 'MintCloseAuthority',
  data: GetDiscriminatedUnionVariantContent<
    MintExtensionArgs,
    '__kind',
    'MintCloseAuthority'
  >
): GetDiscriminatedUnionVariant<
  MintExtensionArgs,
  '__kind',
  'MintCloseAuthority'
>;
export function mintExtension(
  kind: 'ConfidentialTransferMint',
  data: GetDiscriminatedUnionVariantContent<
    MintExtensionArgs,
    '__kind',
    'ConfidentialTransferMint'
  >
): GetDiscriminatedUnionVariant<
  MintExtensionArgs,
  '__kind',
  'ConfidentialTransferMint'
>;
export function mintExtension(
  kind: 'ConfidentialTransferAccount',
  data: GetDiscriminatedUnionVariantContent<
    MintExtensionArgs,
    '__kind',
    'ConfidentialTransferAccount'
  >
): GetDiscriminatedUnionVariant<
  MintExtensionArgs,
  '__kind',
  'ConfidentialTransferAccount'
>;
export function mintExtension(
  kind: 'DefaultAccountState',
  data: GetDiscriminatedUnionVariantContent<
    MintExtensionArgs,
    '__kind',
    'DefaultAccountState'
  >
): GetDiscriminatedUnionVariant<
  MintExtensionArgs,
  '__kind',
  'DefaultAccountState'
>;
export function mintExtension(
  kind: 'ImmutableOwner',
  data: GetDiscriminatedUnionVariantContent<
    MintExtensionArgs,
    '__kind',
    'ImmutableOwner'
  >
): GetDiscriminatedUnionVariant<MintExtensionArgs, '__kind', 'ImmutableOwner'>;
export function mintExtension(
  kind: 'MemoTransfer',
  data: GetDiscriminatedUnionVariantContent<
    MintExtensionArgs,
    '__kind',
    'MemoTransfer'
  >
): GetDiscriminatedUnionVariant<MintExtensionArgs, '__kind', 'MemoTransfer'>;
export function mintExtension(
  kind: 'NonTransferable',
  data: GetDiscriminatedUnionVariantContent<
    MintExtensionArgs,
    '__kind',
    'NonTransferable'
  >
): GetDiscriminatedUnionVariant<MintExtensionArgs, '__kind', 'NonTransferable'>;
export function mintExtension(
  kind: 'InterestBearingConfig',
  data: GetDiscriminatedUnionVariantContent<
    MintExtensionArgs,
    '__kind',
    'InterestBearingConfig'
  >
): GetDiscriminatedUnionVariant<
  MintExtensionArgs,
  '__kind',
  'InterestBearingConfig'
>;
export function mintExtension(
  kind: 'CpiGuard',
  data: GetDiscriminatedUnionVariantContent<
    MintExtensionArgs,
    '__kind',
    'CpiGuard'
  >
): GetDiscriminatedUnionVariant<MintExtensionArgs, '__kind', 'CpiGuard'>;
export function mintExtension(
  kind: 'PermanentDelegate',
  data: GetDiscriminatedUnionVariantContent<
    MintExtensionArgs,
    '__kind',
    'PermanentDelegate'
  >
): GetDiscriminatedUnionVariant<
  MintExtensionArgs,
  '__kind',
  'PermanentDelegate'
>;
export function mintExtension(
  kind: 'NonTransferableAccount',
  data: GetDiscriminatedUnionVariantContent<
    MintExtensionArgs,
    '__kind',
    'NonTransferableAccount'
  >
): GetDiscriminatedUnionVariant<
  MintExtensionArgs,
  '__kind',
  'NonTransferableAccount'
>;
export function mintExtension(
  kind: 'TransferHook',
  data: GetDiscriminatedUnionVariantContent<
    MintExtensionArgs,
    '__kind',
    'TransferHook'
  >
): GetDiscriminatedUnionVariant<MintExtensionArgs, '__kind', 'TransferHook'>;
export function mintExtension(
  kind: 'TransferHookAccount',
  data: GetDiscriminatedUnionVariantContent<
    MintExtensionArgs,
    '__kind',
    'TransferHookAccount'
  >
): GetDiscriminatedUnionVariant<
  MintExtensionArgs,
  '__kind',
  'TransferHookAccount'
>;
export function mintExtension(
  kind: 'ConfidentialTransferFee',
  data: GetDiscriminatedUnionVariantContent<
    MintExtensionArgs,
    '__kind',
    'ConfidentialTransferFee'
  >
): GetDiscriminatedUnionVariant<
  MintExtensionArgs,
  '__kind',
  'ConfidentialTransferFee'
>;
export function mintExtension(
  kind: 'ConfidentialTransferFeeAmount',
  data: GetDiscriminatedUnionVariantContent<
    MintExtensionArgs,
    '__kind',
    'ConfidentialTransferFeeAmount'
  >
): GetDiscriminatedUnionVariant<
  MintExtensionArgs,
  '__kind',
  'ConfidentialTransferFeeAmount'
>;
export function mintExtension(
  kind: 'MetadataPointer',
  data: GetDiscriminatedUnionVariantContent<
    MintExtensionArgs,
    '__kind',
    'MetadataPointer'
  >
): GetDiscriminatedUnionVariant<MintExtensionArgs, '__kind', 'MetadataPointer'>;
export function mintExtension(
  kind: 'TokenMetadata',
  data: GetDiscriminatedUnionVariantContent<
    MintExtensionArgs,
    '__kind',
    'TokenMetadata'
  >
): GetDiscriminatedUnionVariant<MintExtensionArgs, '__kind', 'TokenMetadata'>;
export function mintExtension(
  kind: 'GroupPointer',
  data: GetDiscriminatedUnionVariantContent<
    MintExtensionArgs,
    '__kind',
    'GroupPointer'
  >
): GetDiscriminatedUnionVariant<MintExtensionArgs, '__kind', 'GroupPointer'>;
export function mintExtension(
  kind: 'TokenGroup',
  data: GetDiscriminatedUnionVariantContent<
    MintExtensionArgs,
    '__kind',
    'TokenGroup'
  >
): GetDiscriminatedUnionVariant<MintExtensionArgs, '__kind', 'TokenGroup'>;
export function mintExtension(
  kind: 'GroupMemberPointer',
  data: GetDiscriminatedUnionVariantContent<
    MintExtensionArgs,
    '__kind',
    'GroupMemberPointer'
  >
): GetDiscriminatedUnionVariant<
  MintExtensionArgs,
  '__kind',
  'GroupMemberPointer'
>;
export function mintExtension(
  kind: 'TokenGroupMember',
  data: GetDiscriminatedUnionVariantContent<
    MintExtensionArgs,
    '__kind',
    'TokenGroupMember'
  >
): GetDiscriminatedUnionVariant<
  MintExtensionArgs,
  '__kind',
  'TokenGroupMember'
>;
export function mintExtension<K extends MintExtensionArgs['__kind'], Data>(
  kind: K,
  data?: Data
) {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}

export function isMintExtension<K extends MintExtension['__kind']>(
  kind: K,
  value: MintExtension
): value is MintExtension & { __kind: K } {
  return value.__kind === kind;
}
